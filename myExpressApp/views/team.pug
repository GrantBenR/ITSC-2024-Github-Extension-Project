extends default

block content
    #content
        div.recordHeader
            h1 TeamId: #{teamId}
            h1 Team Name: #{teamName}
            h3 Total Users: #{usersCount}
        div.CanvasWrapper
            h1.CanvasHeader Team record graph
            canvas#myChart
        div.dropdown
            button(onclick="ToggleDropdown()" class="dropbtn") Select a User to Add
            div(id="myDropdown" class="dropdown-content")
                input(type="text" placeholder="Search.." id="myInput" onkeyup="FilterDropdown()")
                div#dropdownList
        input(type="text" placeholder="Enter User Name" id="nameInput")
        button(onclick="AddUserToTeam()" class="inputBtn") Add User to Team
        h1 Related Records:
        p#idhidden #{teamId}
        div(id="referenceList" class="referenceList")
        button(id="nextbtn" class="tabbtn" onclick="TabUp()") Next
        button(id="backbtn" class="tabbtn" onclick="TabDown()") Previous
    script(src="https://cdn.jsdelivr.net/npm/chart.js")
    script.
        var index;
        const interval = 2;
        Main();
        async function Main()
        {
            index = 0;
            ListReferences();
            PopulateDropdown();
        }
        async function ListReferences()
        {
            var idReference = await document.getElementById("idhidden");
            const id = idReference.textContent;
            const allUsersResponse = await fetch("http://localhost:5220/teammodel/" + id + "/users");
            var allUsers = await allUsersResponse.json();
            var destinationDiv = document.getElementById("referenceList");
            for (var child of destinationDiv.childNodes)
            {
                console.log(child);
                destinationDiv.removeChild(child);
            }
            var links = document.getElementsByClassName("referenceLink");
            for (var child of links)
            {
                child.remove();
            }
            allUsers = allUsers.slice(index, index + interval);
            for (var i = 0; i < allUsers.length; i++)
            {
                var userLink = document.createElement('A');
                userLink.className = "referenceLink";
                userLink.href = "http://localhost:5220/views/usermodel/user/" + allUsers[i].id;
                userLink.textContent = "Id: " + allUsers[i].id + ", UserName: " + allUsers[i].UserName + "\n";
                destinationDiv.appendChild(userLink);
            }
        }
        function ToggleDropdown() {
            document.getElementById("myDropdown").classList.toggle("show");
        }
        function FilterDropdown() 
        {
            const input = document.getElementById("myInput");
            const filter = input.value.toUpperCase();
            const dropdown = document.getElementById("myDropdown");
            const a = dropdown.getElementsByClassName("dropdownElement");
            for (let i = 0; i < a.length; i++) 
            {
                txtValue = a[i].textContent || a[i].innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) 
                {
                    a[i].style.display = "";
                } 
                else 
                {
                    a[i].style.display = "none";
                }
            }
        }
        async function PopulateDropdown()
        {
            var idReference = await document.getElementById("idhidden");
            const id = idReference.textContent;
            const dropdown = document.getElementById("dropdownList");
            const allUsersResponse = await fetch("http://localhost:5220/user");
            const allUsers = await allUsersResponse.json();
            for (let i = 0; i < allUsers.length; i++) 
            {
                var dropElement = document.createElement("button");
                dropElement.className = "dropdownElement";
                dropElement.textContent = allUsers[i].UserName;
                dropElement.addEventListener('click', async function ()
                {
                    const input = await document.getElementById("nameInput");
                    input.value = allUsers[i].UserName;
                    ToggleDropdown();
                });
                dropdown.appendChild(dropElement);
            }
        }
        async function AddUserToTeam()
        {
            var idReference = await document.getElementById("idhidden");
            const teamId = idReference.textContent;
            const input = await document.getElementById("nameInput");
            if (input != null)
            {
                const inputName = input.value;
                //.toLowerCase();
                if (inputName != null && inputName != "")
                {
                    var userResponse = await fetch("http://localhost:5220/user/" + inputName);
                    const user = await userResponse.json();
                    if (user != null)
                    {
                        fetch("http://localhost:5220/usersTeams/" + user.id + "/" + teamId, 
                        {
                            method: "POST", // *GET, POST, PUT, DELETE, etc.
                            mode: "cors", // no-cors, *cors, same-origin
                            cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
                            credentials: "same-origin", // include, *same-origin, omit
                            headers: {
                                "Content-Type": "application/json",
                                // 'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            redirect: "follow", // manual, *follow, error
                            referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                        })
                        .then(function (){
                            console.log(Response);
                        })
                        .catch( function() {
                            console.log("New user was unable to be added to team");
                        });
                    }
                    else
                    {
                        console.log("User with provided username does not exist");
                    }
                }
                else
                {
                    console.log("Invalid user name");
                }
            }
            else
            {
                console.log("Input element is null")
            }
        }